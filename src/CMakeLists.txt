if (TACO_SHARED_LIBRARY)
  set(TACO_LIBRARY_TYPE SHARED)
  message("-- Shared library")
else()
  set(TACO_LIBRARY_TYPE STATIC)
  message("-- Static library")
endif()

#set(Protobuf_PREFIX_PATH
#    "/usr/local/include/google/protobuf"
#)
#list(APPEND CMAKE_PREFIX_PATH "${Protobuf_PREFIX_PATH}")

include(FindProtobuf)
find_package(Protobuf REQUIRED)
include_directories(${PROTOBUF_INCLUDE_DIR})

set(TACO_SRC_DIRS . parser index_notation lower ir codegen storage error util sam)

foreach(dir ${TACO_SRC_DIRS})
  file(GLOB TACO_HEADERS ${TACO_HEADERS} ${dir}/*.h)
  file(GLOB TACO_HEADERS ${TACO_HEADERS} ${TACO_INCLUDE_DIR}/taco/${dir}/*.h)
  file(GLOB TACO_SOURCES ${TACO_SOURCES} ${dir}/*.cpp)
endforeach()

set(TACO_HEADERS ${TACO_HEADERS} ../include/taco/ir_tags.h)
set(TACO_SOURCES ${TACO_SOURCES} ir_tags.cpp sam/sam_printer.cpp sam/sam_printer.h)

include_directories(${CMAKE_CURRENT_BINARY_DIR})

file(GLOB PROTO_SRCS sam/tortilla/proto/*.proto)

protobuf_generate_cpp(PROTO_SRC PROTO_HEADER ${PROTO_SRCS})
add_library(proto ${PROTO_HEADER} ${PROTO_SRC})
target_link_libraries(proto ${PROTOBUF_LIBRARY})
set_property(TARGET proto PROPERTY POSITION_INDEPENDENT_CODE ON)

add_definitions(${TACO_DEFINITIONS})
include_directories(${TACO_SRC_DIR})
add_library(taco ${TACO_LIBRARY_TYPE} ${TACO_HEADERS} ${TACO_SOURCES}) # ${PROTO_SRCS} ${PROTO_HEADER})
target_link_libraries(taco PRIVATE proto)
if (CUDA)
  include_directories(${CUDA_INCLUDE_DIRS})
  target_link_libraries(taco PUBLIC ${CUDA_LIBRARIES})
endif (CUDA)
install(TARGETS taco DESTINATION lib)

if (LINUX)
  target_link_libraries(taco PRIVATE ${TACO_LIBRARIES} dl)
  target_link_libraries(taco PUBLIC stdc++fs)
else()
  target_link_libraries(taco PRIVATE ${TACO_LIBRARIES})
endif()
